@model ReadAllLibrary.ViewModels.ShoppingCartViewModel

@{
    ViewBag.Title = "Shopping Cart";
    string status = "";
    bool permissionToCheckOut = Model.Permission;
    bool? CanPlaceOrder = Model.CanPlaceOrder;
    bool? needsToUpgade = Model.NeedsToUpgrade;
}
<script src="/Scripts/jquery-1.4.4.min.js"
        type="text/javascript"></script>
<script type="text/javascript">
    $(function () {
        // Document.ready -> link up remove event handler
        $(".RemoveLink").click(function () {
            // Get the id from the link
            var recordToDelete = $(this).attr("data-id");
            if (recordToDelete != '') {
                // Perform the ajax post
                $.post("/ShoppingCart/RemoveFromCart", {"id": recordToDelete },
                    function (data) {
                        // Successful requests get here
                        // Update the page elements
                        if (data.ItemCount == 0) {
                            $('#row-' + data.DeleteId).fadeOut('slow');
                        } else {
                            $('#item-count-' + data.DeleteId).text(data.ItemCount);
                        }
                        if (data.Permission == false)
                        {
                            $('#check-out').text('');
                        }

                        $('#cart-total').text('Total: ' + data.CartTotal);
                        
                        $('#update-message').text(data.Message);
                        $('#cart-status').text('Cart (' + data.CartCount + ')');
                    });
            }
        });
    });
</script>
<h3>
<em>Review</em> your cart:
</h3>
@if (permissionToCheckOut == true && CanPlaceOrder == true)
{
<p id="check-out" class="button">
    @Html.ActionLink("Checkout", "ConfirmAddress", "Checkout", new { amount = Model.CartTotal }, null)
</p>
}
else if (permissionToCheckOut == false && needsToUpgade == true)
{
    <p style="color:red">You need to upgrade your account. Either you have tried to add an eBook to your cart or you have reached your order limit for this month. <br> If you wish to do this please use the link below</p>
    @Html.ActionLink("Upgrade", "ChangeMembership", "Roles", new { id = Model.userId}, null)
}
else if (CanPlaceOrder == false)
{
    <p style="color:red">You already have an active order. Please return this before attempting to place another.</p>
}




<div style="color:red" id="update-message">
</div>
<table class="table">
    <tr>
        <th>
            Book title
        </th>

        <th>
            Category
        </th>
        <th>
            Publisher
        </th>
        <th>
            Status
        </th>
    </tr>

    @foreach (var item in Model.CartItems)
    {
        <tr id="row-@item.CopyId">
           
            <td>
                @Html.ActionLink(item.Book.BookTitle, "Details", "Books", new { id = item.BookId }, null)
            </td>
           
            <td id="item-count-@item.CopyId">
                @item.Book.Category.ToString()
            </td>
            <td id="item-count-@item.CopyId">
                @item.Book.Publisher.PublisherName
            </td>
            <td id="item-count-@item.CopyId">
                @if (item.Book.Status == 0) { status = "Ready to order"; } else if (item.Book.Status == 1) { status = "Reserved"; }
                 @status
            </td>
            <td>
                <a href="#" class="RemoveLink" data-id="@item.CopyId">Remove from cart </a>
            </td>
        </tr>
    }

</table>
<p id="cart-total">Total: @Model.CartTotal.ToString("0.00")</p>


   